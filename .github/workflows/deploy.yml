name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: cicd-env
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Docker image
        run: |
          docker build -t zupandit/tutor-connect:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push zupandit/tutor-connect:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: cicd-env
    steps:
      - name: SSH into EC2 and deploy with docker-compose
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Create /app directory if it doesn't exist and set ownership
            if [ ! -d "/app" ]; then
              sudo mkdir -p /app
              sudo chown $(whoami):$(whoami) /app
            fi
            cd /app

            # Clone the repository if not present, else update it using the SSH URL
            if [ ! -d ".git" ]; then
              git clone git@github.com:yourusername/yourrepo.git .
            else
              git pull origin main
            fi

            # Create or update .env.production with the required environment variables
            echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" > .env.production
            echo "MONGODB_URI=mongodb://mongodb:27017/tutor-connect" >> .env.production
            echo "NEXTAUTH_URL=http://99.79.41.124" >> .env.production

            # Use docker-compose to deploy the application
            docker-compose pull
            docker-compose down || true
            docker-compose up -d
